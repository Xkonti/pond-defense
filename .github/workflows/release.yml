name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Nim
      uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: '2.0.8'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install dependencies
      run: nimble install -y
      
    - name: Build project
      run: nimble build -d:release
      
    - name: Verify build output
      run: |
        if (Test-Path "pond_defense.exe") {
          Write-Host "✓ pond_defense.exe found"
          Get-ChildItem pond_defense.exe | Format-List Name, Length
        } else {
          Write-Host "✗ pond_defense.exe not found"
          Get-ChildItem . | Where-Object {$_.Name -like "*pond*"}
          exit 1
        }
        
    - name: Create release package
      run: |
        # Create release directory
        New-Item -ItemType Directory -Path "release" -Force
        
        # Copy files to release directory
        Copy-Item "LICENSE" "release/"
        Copy-Item "pond_defense.exe" "release/"
        Copy-Item "assets" "release/" -Recurse
        
        # Create zip file
        $zipName = "pond_defense_${{ github.event.inputs.version }}.zip"
        Compress-Archive -Path "release/*" -DestinationPath $zipName
        
        # Verify zip contents
        Write-Host "Created $zipName with contents:"
        Expand-Archive -Path $zipName -DestinationPath "temp_verify" -Force
        Get-ChildItem "temp_verify" -Recurse | Format-Table Name, Length
        Remove-Item "temp_verify" -Recurse -Force
        
        # Set output for next step
        echo "ZIP_NAME=$zipName" >> $env:GITHUB_ENV
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        body: |
          ## Pond Defense ${{ github.event.inputs.version }}
          
          A simple 2D game where you're a frog trying to defend your pond.
          
          ### How to play
          - Use the arrow keys to move the frog
          - Lick with the Z key to eat food and pull trash
          - Kick trash out of the map with the spacebar
          - Keep yourself moist by getting into the pond on the bottom
          - Eat flies to refill your energy
          - Resist the trippy background
          - Time moves only when you move or perform an action (lick/kick/rotate)
          
          ### Installation
          1. Download the `pond_defense_${{ github.event.inputs.version }}.zip` file
          2. Extract it to a folder of your choice
          3. Run `pond_defense.exe`
          4. Enjoy!
          
          **Note:** Make sure to keep the `assets` folder in the same directory as the executable.
        files: |
          ${{ env.ZIP_NAME }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}